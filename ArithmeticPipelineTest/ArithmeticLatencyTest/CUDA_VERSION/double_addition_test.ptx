//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Fri Aug  1 10:29:38 2014 _full_dep(1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64


.visible .entry Pattern_inst_count_0(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<4>;
	.reg .f64	%fd<1>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd3, %rd2;
	st.global.u32 	[%rd3], %r4;
	st.global.u32 	[%rd3+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_1(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<3>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd2;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_2_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<5>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd3;
	add.f64  	%fd2, %fd1, %fd4;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_3_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<7>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd4;
	add.f64  	%fd2, %fd1, %fd5;
	add.f64  	%fd3, %fd2, %fd6;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_4_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<9>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd5;
	add.f64  	%fd2, %fd1, %fd6;
	add.f64  	%fd3, %fd2, %fd7;
	add.f64  	%fd4, %fd3, %fd8;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_5_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<11>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd6;
	add.f64  	%fd2, %fd1, %fd7;
	add.f64  	%fd3, %fd2, %fd8;
	add.f64  	%fd4, %fd3, %fd9;
	add.f64  	%fd5, %fd4, %fd10;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_6_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<13>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd7;
	add.f64  	%fd2, %fd1, %fd8;
	add.f64  	%fd3, %fd2, %fd9;
	add.f64  	%fd4, %fd3, %fd10;
	add.f64  	%fd5, %fd4, %fd11;
	add.f64  	%fd6, %fd5, %fd12;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_7_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<15>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd8;
	add.f64  	%fd2, %fd1, %fd9;
	add.f64  	%fd3, %fd2, %fd10;
	add.f64  	%fd4, %fd3, %fd11;
	add.f64  	%fd5, %fd4, %fd12;
	add.f64  	%fd6, %fd5, %fd13;
	add.f64  	%fd7, %fd6, %fd14;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_8_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<17>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd9;
	add.f64  	%fd2, %fd1, %fd10;
	add.f64  	%fd3, %fd2, %fd11;
	add.f64  	%fd4, %fd3, %fd12;
	add.f64  	%fd5, %fd4, %fd13;
	add.f64  	%fd6, %fd5, %fd14;
	add.f64  	%fd7, %fd6, %fd15;
	add.f64  	%fd8, %fd7, %fd16;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_9_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<19>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
	ld.global.f64   %fd17, [%rd3+128];
	ld.global.f64   %fd18, [%rd3+136];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd10;
	add.f64  	%fd2, %fd1, %fd11;
	add.f64  	%fd3, %fd2, %fd12;
	add.f64  	%fd4, %fd3, %fd13;
	add.f64  	%fd5, %fd4, %fd14;
	add.f64  	%fd6, %fd5, %fd15;
	add.f64  	%fd7, %fd6, %fd16;
	add.f64  	%fd8, %fd7, %fd17;
	add.f64  	%fd9, %fd8, %fd18;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.f64 	[%rd3+64], %fd9;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_10_full_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<21>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
	ld.global.f64   %fd17, [%rd3+128];
	ld.global.f64   %fd18, [%rd3+136];
	ld.global.f64   %fd19, [%rd3+144];
	ld.global.f64   %fd20, [%rd3+152];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd11;
	add.f64  	%fd2, %fd1, %fd12;
	add.f64  	%fd3, %fd2, %fd13;
	add.f64  	%fd4, %fd3, %fd14;
	add.f64  	%fd5, %fd4, %fd15;
	add.f64  	%fd6, %fd5, %fd16;
	add.f64  	%fd7, %fd6, %fd17;
	add.f64  	%fd8, %fd7, %fd18;
	add.f64  	%fd9, %fd8, %fd19;
	add.f64  	%fd10, %fd9, %fd20;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.f64 	[%rd3+64], %fd9;
	st.global.f64 	[%rd3+72], %fd10;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_2_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<5>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd3;
	add.f64  	%fd2, %fd2, %fd4;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_3_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<7>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd4;
	add.f64  	%fd2, %fd2, %fd5;
	add.f64  	%fd3, %fd3, %fd6;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_4_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<9>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd5;
	add.f64  	%fd2, %fd2, %fd6;
	add.f64  	%fd3, %fd3, %fd7;
	add.f64  	%fd4, %fd4, %fd8;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_5_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<11>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd6;
	add.f64  	%fd2, %fd2, %fd7;
	add.f64  	%fd3, %fd3, %fd8;
	add.f64  	%fd4, %fd4, %fd9;
	add.f64  	%fd5, %fd5, %fd10;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_6_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<13>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd7;
	add.f64  	%fd2, %fd2, %fd8;
	add.f64  	%fd3, %fd3, %fd9;
	add.f64  	%fd4, %fd4, %fd10;
	add.f64  	%fd5, %fd5, %fd11;
	add.f64  	%fd6, %fd6, %fd12;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_7_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<15>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd8;
	add.f64  	%fd2, %fd2, %fd9;
	add.f64  	%fd3, %fd3, %fd10;
	add.f64  	%fd4, %fd4, %fd11;
	add.f64  	%fd5, %fd5, %fd12;
	add.f64  	%fd6, %fd6, %fd13;
	add.f64  	%fd7, %fd7, %fd14;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_8_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<17>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd9;
	add.f64  	%fd2, %fd2, %fd10;
	add.f64  	%fd3, %fd3, %fd11;
	add.f64  	%fd4, %fd4, %fd12;
	add.f64  	%fd5, %fd5, %fd13;
	add.f64  	%fd6, %fd6, %fd14;
	add.f64  	%fd7, %fd7, %fd15;
	add.f64  	%fd8, %fd8, %fd16;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_9_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<19>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
	ld.global.f64   %fd17, [%rd3+128];
	ld.global.f64   %fd18, [%rd3+136];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd10;
	add.f64  	%fd2, %fd2, %fd11;
	add.f64  	%fd3, %fd3, %fd12;
	add.f64  	%fd4, %fd4, %fd13;
	add.f64  	%fd5, %fd5, %fd14;
	add.f64  	%fd6, %fd6, %fd15;
	add.f64  	%fd7, %fd7, %fd16;
	add.f64  	%fd8, %fd8, %fd17;
	add.f64  	%fd9, %fd9, %fd18;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.f64 	[%rd3+64], %fd9;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}

.visible .entry Pattern_inst_count_10_no_dep(
	.param .u64 param_0,
	.param .u64 param_1,
	.param .u32 param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<21>;

	ld.param.u64 	%rd1, [param_0];
	ld.param.u64 	%rd2, [param_1];
	ld.param.u32 	%r1, [param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f64   %fd1, [%rd3];
	ld.global.f64   %fd2, [%rd3+8];
	ld.global.f64   %fd3, [%rd3+16];
	ld.global.f64   %fd4, [%rd3+24];
	ld.global.f64   %fd5, [%rd3+32];
	ld.global.f64   %fd6, [%rd3+40];
	ld.global.f64   %fd7, [%rd3+48];
	ld.global.f64   %fd8, [%rd3+56];
	ld.global.f64   %fd9, [%rd3+64];
	ld.global.f64   %fd10, [%rd3+72];
	ld.global.f64   %fd11, [%rd3+80];
	ld.global.f64   %fd12, [%rd3+88];
	ld.global.f64   %fd13, [%rd3+96];
	ld.global.f64   %fd14, [%rd3+104];
	ld.global.f64   %fd15, [%rd3+112];
	ld.global.f64   %fd16, [%rd3+120];
	ld.global.f64   %fd17, [%rd3+128];
	ld.global.f64   %fd18, [%rd3+136];
	ld.global.f64   %fd19, [%rd3+144];
	ld.global.f64   %fd20, [%rd3+152];
    setp.gt.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_1;
	bra.uni 	BB0_2;

BB0_1:
	mov.u32 	%r2, %clock;
	add.f64  	%fd1, %fd1, %fd11;
	add.f64  	%fd2, %fd2, %fd12;
	add.f64  	%fd3, %fd3, %fd13;
	add.f64  	%fd4, %fd4, %fd14;
	add.f64  	%fd5, %fd5, %fd15;
	add.f64  	%fd6, %fd6, %fd16;
	add.f64  	%fd7, %fd7, %fd17;
	add.f64  	%fd8, %fd8, %fd18;
	add.f64  	%fd9, %fd9, %fd19;
	add.f64  	%fd10, %fd10, %fd20;
	mov.u32 	%r3, %clock;
	add.s32 	%r1, %r1, -1;
	setp.gt.s32	%p2, %r1, 0;
	mov.u32 	%r4, %r2;
	mov.u32 	%r5, %r3;
	@%p2 bra 	BB0_1;

BB0_2:
	cvta.to.global.u64 	%rd4, %rd2;
	st.global.f64 	[%rd3], %fd1;
	st.global.f64 	[%rd3+8], %fd2;
	st.global.f64 	[%rd3+16], %fd3;
	st.global.f64 	[%rd3+24], %fd4;
	st.global.f64 	[%rd3+32], %fd5;
	st.global.f64 	[%rd3+40], %fd6;
	st.global.f64 	[%rd3+48], %fd7;
	st.global.f64 	[%rd3+56], %fd8;
	st.global.f64 	[%rd3+64], %fd9;
	st.global.f64 	[%rd3+72], %fd10;
	st.global.u32 	[%rd4], %r4;
	st.global.u32 	[%rd4+4], %r5;
	ret;
}
